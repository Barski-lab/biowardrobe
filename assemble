#!/bin/bash

#check Qt
qmake -v >/dev/null 2>&1
[ $? -ne 0 ] && echo "Qt developer tool is not installed" && exit

#check mysql
mysql --version >/dev/null 2>&1
[ $? -ne 0 ] && echo "No mysql client tools installed" && exit

>./output.log

echo "Please type mysql root password"
read PASS
echo "Please type mysql wardrobe password"
read WPASS

#think twice
exit 
#think twice
mysql -hlocalhost -p${PASS} -uroot < ./sql/wardrobe.sql >>./output.log 2>&1

mysql -hlocalhost -p${PASS} -uroot -N -e "DROP USER 'wardrobe'@'localhost';" 
mysql -hlocalhost -p${PASS} -uroot -N -e "CREATE USER 'wardrobe'@'localhost' IDENTIFIED BY '${WPASS}';"
##GRANT USAGE ON *.* TO 'wardrobe'@'localhost' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;
mysql -hlocalhost -p${PASS} -uroot -N -e "GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE VIEW, SHOW VIEW, EXECUTE ON *.* TO 'wardrobe'@'localhost';"
mysql -hlocalhost -p${PASS} -uroot -N -e "REVOKE GRANT OPTION, CREATE TEMPORARY TABLES, LOCK TABLES, EVENT,ALTER ROUTINE, CREATE ROUTINE, TRIGGER ON *.* FROM 'wardrobe'@'localhost';"
mysql -hlocalhost -p${PASS} -uroot -N -e "FLUSH PRIVILEGES;"

#mysql settings
BINS=$(mysql -hlocalhost -p${PASS} -uroot -N -e "select group_concat(\`value\` order by \`key\` desc separator '/') from ems.settings where \`key\` in ('wardrobe','bin')")
#"

echo "Compile bamtools lib"
cd ./thirdparty/bamtools
qmake >>../../output.log 2>&1
make >>../../output.log 2>&1
[ $? -ne 0 ] && echo "Cant compile bam tools" && exit

cd ../../
echo "Compile iaintersect"
cd src/iaintersect
qmake >>../../output.log 2>&1
make >>../../output.log 2>&1
[ $? -ne 0 ] && echo "Cant compile iaintersect" && exit
ln -sf $(pwd)/iaintersect $BINS/iaintersect

cd ../../
echo "Compile bam2bedgraph"
cd src/bam2bedgraph
qmake >>../../output.log 2>&1
make >>../../output.log 2>&1
[ $? -ne 0 ] && echo "Cant compile bam2bedgraph" && exit
ln -sf $(pwd)/bam2bedgraph $BINS/bam2bedgraph


cd ../../
echo "Compile reads-counting"
cd src/reads-counting
qmake >>../../output.log 2>&1
make >>../../output.log 2>&1
[ $? -ne 0 ] && echo "Cant compile reads-counting" && exit
ln -sf $(pwd)/ReadsCounting $BINS/ReadsCounting


cd ../../
echo "Compile averagetagdensity"
cd src/atdp
qmake >>../../output.log 2>&1
make >>../../output.log 2>&1
[ $? -ne 0 ] && echo "Cant compile averagedensity" && exit
ln -sf $(pwd)/atdp $BINS/atdp

echo "Assemble complete"
cd ../../

cd ./scripts/

for i in *.py; do 
ln -sf $(pwd)/${i} $BINS/${i}
done

