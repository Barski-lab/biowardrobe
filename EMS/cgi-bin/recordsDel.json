#! /usr/bin/env python

import os
import sys
import MySQLdb
#import warnings
import cgitb; cgitb.enable()
import cgi
import urllib
import urlparse
import simplejson as json
import Arguments


#DEBUG
output=open('/tmp/DEL.ERROR','wb')

def error_msg(msg):
 print """
   {"success": false, "message": "%s" }"""%(msg.replace('"','\\"'))
 output.write("\n"+"Error in deletion: " +msg+"\n")
 sys.exit()

arguments = Arguments.Arguments(sys.argv)


stdinbuf = sys.stdin.read()
if stdinbuf is None:
 error_msg("No data")

url_parse = dict(urlparse.parse_qs(stdinbuf))
if url_parse['tablename'][0] is None:
 error_msg("Empty table name")
if url_parse['data'][0] is None:
 error_msg("No data")

table_name=url_parse['tablename'][0]
jsondata = json.loads(url_parse['data'][0])
#DEBUG
json.dump(jsondata, output)

genomedb=''
genomenm=''
try:
    genomedb=url_parse['genomedb'][0]
    genomenm=url_parse['genomenm'][0]
except Exception, e:
    pass

if jsondata is None:
 error_msg("No data")



if genomedb != '' and table_name == 'grp_local':
    try:
        conn = MySQLdb.connect (host = arguments.readString("SQLG/HOST"),user = arguments.readString("SQLG/USER"), passwd=arguments.readPass("SQLG/PASS"), db=genomedb)
        conn.set_character_set('utf8')
        cursor = conn.cursor ()
    except Exception, e: 
        Error_str=str(e).replace('"','')
        error_msg("Error database connection"+Error_str)
else:
    try:
        conn = MySQLdb.connect (host = arguments.readString("SQLE/HOST"),user = arguments.readString("SQLE/USER"), passwd=arguments.readPass("SQLE/PASS"), db=arguments.readString("SQLE/DB"))
        conn.set_character_set('utf8')
        cursor = conn.cursor ()
    except Exception, e: 
        Error_str=str(e).replace('"','')
        error_msg("Error database connection"+Error_str)


try:
 SQL=str()
 is_str=0
 pair=str()

 for rows in jsondata:

  #if just one new record
  if type(rows) is str:

   if rows == 'id' and table_name != 'grp_local':
    pair+=str(rows).replace("'","").replace('"','').replace(';','')+"="+str(int(jsondata[rows]))
   if rows == 'name' and table_name == 'grp_local':
    pair+=str(rows).replace("'","").replace('"','').replace(';','')+"='"+str(jsondata[rows])+"'"

   is_str=is_str+1

  else:
  #if many records
   for i in rows:
    if str(i) == 'id' and table_name != 'grp_local':
     pair+=str(i).replace("'","").replace('"','').replace(';','')+"="+str(int(rows[i]))+" and "
    if str(i) == 'name' and table_name == 'grp_local':
     pair+=str(i).replace("'","").replace('"','').replace(';','')+"='"+str(rows[i])+"' and "

   #remove last [ or ]
   pair=pair[:-4]
   STR="""delete from `%s` where %s;"""%(table_name,pair)
   SQL+=STR
   pair=str()

 if is_str > 0:
  STR="""delete from `%s` where %s;"""%(table_name,pair)
  SQL+=STR


 cursor.execute(SQL)
 cursor.close()
 conn.commit()
 conn.close()

 print """
  {"success": true, "message": "Data saved" }"""

except Exception, e:
 cursor.close()
 conn.rollback()
 conn.close()
 Error_str=str(e)
 output.write("\n"+"Error in deletion: " +Error_str+"<br>'"+SQL+"' "+"\n")
 error_msg("Error in deletion: " +Error_str+"<br>'"+SQL+"' ")


