#! /usr/bin/env python

import os
import sys
import MySQLdb
#import warnings
import cgitb; cgitb.enable()
import cgi
import urllib
import urlparse
import simplejson as json
import Arguments

#DEBUG
output=open('/tmp/UPDATE.ERROR','wb')


def error_msg(msg):
    print """
	{"success": false, "message": "%s" }"""%(msg.replace('"','\\"'))
    sys.exit()

#
# function uploads data to SQL
def upload_data(cursor,jsondata,table_name):
    fields=list()
    fields_values=list()
    fields_sql=""

    cursor.execute ("describe "+table_name)
    for (row ) in cursor.fetchall():
	if row[0] == 'id':
	    continue
	if jsondata[row[0]] is None or (type(jsondata[row[0]]) is str and jsondata[row[0]] in 'None'):
	    fields_sql+=str(row[0])+'=%s,'
	    fields_values.append('')
	    continue
	if 'id' in row[0] and jsondata[row[0]] == 0:
	    continue
        fields_sql+=str(row[0])+'=%s,'
        fields_values.append(jsondata[row[0]])

    fields_sql=fields_sql[:-1]
    #output.write("\n" +str(fields_sql)+"\n\n")
    #output.write("\n" +str(fields_values)+"\n\n")

    SQL="""UPDATE `%s` SET %s WHERE id=%s"""%(table_name,fields_sql,'%s;')
    output.write("\n" +SQL+"\n\n")

    fields_values.append(jsondata['id'])
    cursor.execute(SQL,tuple(fields_values))


arguments = Arguments.Arguments(sys.argv)


stdinbuf = sys.stdin.read()
if stdinbuf is None:
    error_msg("No data")

url_parse = dict(urlparse.parse_qs(stdinbuf))

table_name=str()

try:
    if url_parse['tablename'][0] is None:
	error_msg("Empty table name")
    if url_parse['data'][0] is None:
	error_msg("No data")
    table_name=url_parse['tablename'][0]
except Exception, e: 
    error_msg("Table name is absent!!! Error:"+Error_str)

try:
    filtr=url_parse['filter'][0]
except Exception, e:
    pass

jsondata = json.loads(url_parse['data'][0])

if jsondata is None:
    error_msg("No data")

try:
    conn = MySQLdb.connect (host = arguments.readString("SQL/HOST"),user = arguments.readString("SQL/USER"), passwd=arguments.readPass("SQL/PASS"), db=arguments.readString("SQL/DB"))
    conn.set_character_set('utf8')
    cursor = conn.cursor ()
except Exception, e: 
    Error_str=str(e).replace('"','')
    error_msg("Error database connection"+Error_str)


#DEBUG
#output=open('/tmp/UPDATE.ERROR','wb')
#json.dump(jsondata, output)
#output.write("\n\n")

try:
    #output.write("\n\n"+str(len(jsondata))+"-"+str(type(jsondata))+"\n\n")
    #if just one new record
    if type(jsondata) is dict:
	upload_data(cursor,jsondata,table_name)
    else:
	for i in range(len(jsondata)):
	    upload_data(cursor,jsondata[i],table_name)
    cursor.close()
    conn.commit()
    conn.close()

    print """
	{"success": true, "message": "Data saved" }"""

except Exception, e:
    cursor.close()
    conn.rollback()
    conn.close()
    Error_str=str(e)

    #output.write("Error updating: \n" +Error_str+"\n\n")
    #output.close()
    if 'Duplicate' in Error_str:
	error_msg(Error_str)

    error_msg("Error updating:"+Error_str)

 #error_msg("Error updating: " +Error_str+"<br>'"+SQL+"' ")


#output.close()
