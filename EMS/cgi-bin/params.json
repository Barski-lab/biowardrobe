#! /usr/bin/env python

import os
import sys
import MySQLdb
#import warnings
import cgitb; cgitb.enable()
import cgi
import urllib
import urlparse
import simplejson
import Arguments


def error_msg(msg):
 print """
   {"success": false, "message": "%s" }"""%(msg)
 sys.exit()

arguments = Arguments.Arguments(sys.argv)


stdinbuf = sys.stdin.read()
if stdinbuf is None:
 error_msg("No data")

#url_parse = dict(urlparse.parse_qs(stdinbuf))
#if url_parse['tablename'][0] is None:
# error_msg("Empty table name")
#if url_parse['data'][0] is None:
# error_msg("No data")

#table_name=url_parse['tablename'][0]
#jsondata = simplejson.loads(url_parse['data'][0])

#if jsondata is None:
# error_msg("No data")

try:
 conn = MySQLdb.connect (host = arguments.readString("SQLE/HOST"),user = arguments.readString("SQLE/USER"), passwd=arguments.readPass("SQLE/PASS"), db=arguments.readString("SQLE/DB"))
 cursor = conn.cursor ()
except Exception, e: 
 error_msg("Error database connection")




form = cgi.FieldStorage()
table_name=str(form["tablename"].value)
params=str(form["params"].value)

#cursor = conn.cursor ()

fields=list()

cursor.execute ("describe "+table_name)
for (row ) in cursor.fetchall():
 fields.append(row[0]) 


cursor.close ()
cursor = conn.cursor ()
cursor.execute ("select * from "+table_name +" " + params)
comma=""


print """
{"success":true, "data":[""",

for (row ) in cursor.fetchall():
 print """%s{"""%(comma),
 c=""
 for i,item in enumerate(fields):
  print """%s"%s":"%s" """%(c,item,row[i]),
  c=","
 comma=","
 print """}""",

print """]}"""

cursor.close ()
#conn.commit ()
conn.close ()
