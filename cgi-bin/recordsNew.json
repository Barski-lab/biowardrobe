#! /usr/bin/env python

import os
import sys
import MySQLdb
#import warnings
import cgitb; cgitb.enable()
import cgi
import urllib
import urlparse
import simplejson
import Arguments


def error_msg(msg):
 print """
   {"success": false, "message": "%s" }"""%(msg)
 sys.exit()

arguments = Arguments.Arguments(sys.argv)


stdinbuf = sys.stdin.read()
if stdinbuf is None:
 error_msg("No data")

url_parse = dict(urlparse.parse_qs(stdinbuf))
if url_parse['tablename'][0] is None:
 error_msg("Empty table name")
if url_parse['data'][0] is None:
 error_msg("No data")

table_name=url_parse['tablename'][0]
jsondata = simplejson.loads(url_parse['data'][0])

if jsondata is None:
 error_msg("No data")

try:
 conn = MySQLdb.connect (host = arguments.readString("SQL/HOST"),user = arguments.readString("SQL/USER"), passwd=arguments.readPass("SQL/PASS"), db=arguments.readString("SQL/DB"))
 cursor = conn.cursor ()
except Exception, e: 
 error_msg("Error database connection")


try:
 SQL=str()
 is_str=0
 fields_n=str()
 fields_v=str()

 for rows in jsondata:

  #if just one new record
  if type(rows) is str:
   if rows == 'id':
    continue

   fields_n+=str(rows).replace("'","").replace('"','').replace(';','')+","
   fields_v+="'"+str(jsondata[rows]).replace("'","").replace('"','').replace(';','')+"',"
   is_str=is_str+1
   continue
  else:
  #if many records
   for i in rows:
    #in inserts ID should be 0
    if str(i) == 'id':
     continue

    fields_n+=str(i).replace("'","").replace('"','').replace(';','')+","
    fields_v+="'"+str(rows[i]).replace("'","").replace('"','').replace(';','')+"',"

  #remove last ,
  fields_n=fields_n[:-1]
  fields_v=fields_v[:-1]
  STR="""INSERT INTO `%s` (%s) VALUES(%s);"""%(table_name,fields_n,fields_v)
  SQL+=STR
  fields_n=str()
  fields_v=str()

 if is_str > 0:
  #remove last ,
  fields_n=fields_n[:-1]
  fields_v=fields_v[:-1]
  STR="""INSERT INTO `%s` (%s) VALUES(%s);"""%(table_name,fields_n,fields_v)
  SQL+=STR


 cursor.execute(SQL)
 cursor.close()
 conn.commit()
 conn.close()

 print """
  {"success": true, "message": "Data saved" }"""

except Exception, e:
 cursor.close()
 conn.rollback()
 conn.close()
 Error_str=str(e).replace('"','')

 if 'Duplicate' in Error_str:
  error_msg(Error_str)

 error_msg("Error inserting: " +Error_str+"<br>'"+SQL+"' ")


